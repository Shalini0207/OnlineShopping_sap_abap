*&---------------------------------------------------------------------*
*& Report  ZSH_OS_ADMN_MP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZSH_OS_ADMN_MP.
TABLES ZSH_OS_CAT.
TYPES: BEGIN OF TY_CAT,
         PID   TYPE ZSH_OS_CAT-PID,
         NAME  TYPE ZSH_OS_CAT-NAME,
         CATEGORY TYPE ZSH_OS_CAT-CATEGORY,
         TYPE TYPE ZSH_OS_CAT-TYPE,
         PRICE TYPE ZSH_OS_CAT-PRICE,
         STOCK TYPE ZSH_OS_CAT-STOCK,
       END OF TY_CAT.

DATA: IT_FCAT TYPE LVC_T_FCAT,
      WA_FCAT TYPE LVC_S_FCAT.

DATA: IT_SORT TYPE LVC_T_SORT,
      WA_SORT TYPE LVC_S_SORT.

DATA : CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       GRID      TYPE REF TO CL_GUI_ALV_GRID.

DATA: IT_CAT TYPE TABLE OF TY_CAT,
      WA_CAT TYPE TY_CAT.

  START-OF-SELECTION.
  SELECT PID NAME CATEGORY TYPE PRICE STOCK FROM ZSH_OS_CAT INTO TABLE IT_CAT.
    SORT IT_CAT BY PID.
  WA_FCAT-COL_POS = '1'.
  WA_FCAT-FIELDNAME = 'PID'.
  WA_FCAT-REF_TABLE = 'ZSH_OS_CAT'.
  WA_FCAT-TABNAME = 'IT_CAT'.
  WA_FCAT-COLTEXT = 'Product Id'.
  WA_FCAT-SELTEXT = 'Product Id'.
  WA_FCAT-OUTPUTLEN = 13.
  WA_FCAT-EMPHASIZE = 'C3'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

  WA_FCAT-COL_POS = '2'.
  WA_FCAT-FIELDNAME = 'NAME'.
  WA_FCAT-REF_TABLE = 'ZSH_OS_CAT'.
  WA_FCAT-TABNAME = 'IT_CAT'.
  WA_FCAT-COLTEXT = 'Product Name'.
  WA_FCAT-SELTEXT = 'Product Name'.
  WA_FCAT-OUTPUTLEN = 12.
  WA_FCAT-EMPHASIZE = 'C7'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

  WA_FCAT-COL_POS = '3'.
  WA_FCAT-FIELDNAME = 'CATEGORY'.
  WA_FCAT-REF_TABLE = 'ZSH_OS_CAT'.
  WA_FCAT-TABNAME = 'IT_CAT'.
  WA_FCAT-COLTEXT = 'Category'.
  WA_FCAT-SELTEXT = 'Category'.
  WA_FCAT-OUTPUTLEN = 13.
  WA_FCAT-EMPHASIZE = 'C1'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

  WA_FCAT-COL_POS = '4'.
  WA_FCAT-FIELDNAME = 'TYPE'.
  WA_FCAT-REF_TABLE = 'ZSH_OS_CAT'.
  WA_FCAT-TABNAME = 'IT_CAT'.
  WA_FCAT-COLTEXT = 'Type'.
  WA_FCAT-SELTEXT = 'Type'.
  WA_FCAT-OUTPUTLEN = 12.
  WA_FCAT-EMPHASIZE = 'C2'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

  WA_FCAT-COL_POS = '5'.
  WA_FCAT-FIELDNAME = 'PRICE'.
  WA_FCAT-REF_TABLE = 'ZSH_OS_CAT'.
  WA_FCAT-TABNAME = 'IT_CAT'.
  WA_FCAT-COLTEXT = 'Price'.
  WA_FCAT-SELTEXT = 'Price'.
  WA_FCAT-OUTPUTLEN = 10.
  WA_FCAT-EMPHASIZE = 'C5'.

  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

  WA_FCAT-COL_POS = '6'.
  WA_FCAT-FIELDNAME = 'STOCK'.
  WA_FCAT-REF_TABLE = 'ZSH_OS_CAT'.
  WA_FCAT-TABNAME = 'IT_CAT'.
  WA_FCAT-COLTEXT = 'Stock'.
  WA_FCAT-SELTEXT = 'Stock'.
  WA_FCAT-OUTPUTLEN = 7.
  WA_FCAT-EMPHASIZE = 'C6'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

  WA_SORT-FIELDNAME = 'CATEGORY'.

  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.

  WA_SORT-FIELDNAME = 'TYPE'.

  APPEND WA_SORT TO IT_SORT.
  CLEAR WA_SORT.

CALL SCREEN 1000.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1000 INPUT.
  CASE SY-UCOMM.
    WHEN 'FT'.
        SELECT SINGLE * FROM ZSH_OS_CAT WHERE PID = '101' .


    WHEN 'NT'.
      SELECT SINGLE * FROM ZSH_OS_CAT WHERE PID > ZSH_OS_CAT-PID.
      "ENDSELECT.
      IF SY-SUBRC <> 0.
        MESSSHE 'No more records present' TYPE 'E'.
      ENDIF.

    WHEN 'PS'.
      SELECT * FROM ZSH_OS_CAT WHERE PID < ZSH_OS_CAT-PID.
      ENDSELECT.
      IF SY-SUBRC <> 0.
        MESSSHE 'Records already present' TYPE 'E'.
      ENDIF.

    WHEN 'LT'.
      SELECT SINGLE * FROM ZSH_OS_CAT WHERE PID > ZSH_OS_CAT-PID.
      IF SY-SUBRC <> 0.
        MESSSHE 'No more records present' TYPE 'E'.
      ELSE.
        SELECT * FROM ZSH_OS_CAT ORDER BY PID.
        ENDSELECT.
      ENDIF.

    WHEN 'DS'.
      SELECT SINGLE * FROM ZSH_OS_CAT WHERE PID = ZSH_OS_CAT-PID.
      IF SY-SUBRC <> 0.
        MESSSHE 'Records not present' TYPE 'E'.
      ENDIF.

    WHEN 'IT'.
      INSERT ZSH_OS_CAT.
      IF SY-SUBRC = 0.
        MESSSHE 'Records Inserted' TYPE 'I'.
        SUBMIT ZSH_OS_ADMN_MP.
      ELSE.
        MESSSHE 'Records already present' TYPE 'E'.
      ENDIF.


    WHEN 'UE'.
      UPDATE ZSH_OS_CAT SET NAME = ZSH_OS_CAT-NAME
                            CATEGORY = ZSH_OS_CAT-CATEGORY
                            TYPE = ZSH_OS_CAT-TYPE
                            PRICE = ZSH_OS_CAT-PRICE
                            STOCK = ZSH_OS_CAT-STOCK WHERE PID = ZSH_OS_CAT-PID.
      IF SY-SUBRC = 0.
        MESSSHE 'Records Updated' TYPE 'I'.
        SUBMIT ZSH_OS_ADMN_MP.
      ELSE.
        MESSSHE 'Records not present' TYPE 'E'.
      ENDIF.

    WHEN 'DE'.
      DELETE FROM ZSH_OS_CAT WHERE PID = ZSH_OS_CAT-PID.
      IF SY-SUBRC = 0.
        MESSSHE 'Records Deleted' TYPE 'I'.
        SUBMIT ZSH_OS_ADMN_MP.
      ELSE.
        MESSSHE 'Records not present' TYPE 'E'.
      ENDIF.

     WHEN 'CL'.
       CLEAR ZSH_OS_CAT.

    WHEN 'BACK'.
      CALL TRANSACTION 'ZSHAN1'.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_IMSHE  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_IMSHE OUTPUT.
 DATA: W_LINES TYPE I.
  TYPES PICT_LINE(256) TYPE C.
  DATA :
  CONTAINER2 TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
  EDITOR TYPE REF TO CL_GUI_TEXTEDIT,
  PICTURE TYPE REF TO CL_GUI_PICTURE,
  PICT_TAB TYPE TABLE OF PICT_LINE,
  URL(255) TYPE C.
  DATA: GRAPHIC_URL(255).
  DATA: BEGIN OF GRAPHIC_TABLE OCCURS 0,
          LINE(255) TYPE X,
        END OF GRAPHIC_TABLE.
  DATA: L_GRAPHIC_CONV TYPE I.
  DATA: L_GRAPHIC_OFFS TYPE I.
  DATA: GRAPHIC_SIZE TYPE I.
  DATA: L_GRAPHIC_XSTR TYPE XSTRING.
  .
  CALL METHOD CL_GUI_CFW=>FLUSH.
  CREATE OBJECT:
  CONTAINER2 EXPORTING CONTAINER_NAME = 'CONTLOGO',
  PICTURE EXPORTING PARENT = CONTAINER2.
  CALL METHOD CL_SSF_XSF_UTILITIES=>GET_BDS_GRAPHIC_AS_BMP
    EXPORTING
      P_OBJECT       = 'GRAPHICS'
      P_NAME         = 'LOGO'
      P_ID           = 'BMAP'
      P_BTYPE        = 'BCOL'
    RECEIVING
      P_BMP          = L_GRAPHIC_XSTR
*  EXCEPTIONS
*    NOT_FOUND      = 1
*    INTERNAL_ERROR = 2
*    others         = 3
          .
  IF SY-SUBRC <> 0.
* MESSSHE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  GRAPHIC_SIZE = XSTRLEN( L_GRAPHIC_XSTR ).
  L_GRAPHIC_CONV = GRAPHIC_SIZE.
  L_GRAPHIC_OFFS = 0.
  WHILE L_GRAPHIC_CONV > 255.
    GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(255).
    APPEND GRAPHIC_TABLE.
    L_GRAPHIC_OFFS = L_GRAPHIC_OFFS + 255.
    L_GRAPHIC_CONV = L_GRAPHIC_CONV - 255.
  ENDWHILE.
  GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(L_GRAPHIC_CONV).
  APPEND GRAPHIC_TABLE.
  CALL FUNCTION 'DP_CREATE_URL'
    EXPORTING
      TYPE     = 'IMSHE'
      SUBTYPE  = 'X-UNKNOWN'
      SIZE     = GRAPHIC_SIZE
      LIFETIME = 'T'
    TABLES
      DATA     = GRAPHIC_TABLE
    CHANGING
      URL      = URL.
  CALL METHOD PICTURE->LOAD_PICTURE_FROM_URL
    EXPORTING
      URL = URL.
  CALL METHOD PICTURE->SET_DISPLAY_MODE
    EXPORTING
      DISPLAY_MODE = PICTURE->DISPLAY_MODE_FIT_CENTER.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_1000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*

MODULE STATUS_1000 OUTPUT.
  SET PF-STATUS 'ZSHMENU'.
*  SET TITLEBAR 'xxx'.

  IF CONTAINER IS INITIAL.
    CREATE OBJECT CONTAINER
      EXPORTING
*       PARENT         =
        CONTAINER_NAME = 'CONTAINER'
*       STYLE          =
*       LIFETIME       = lifetime_default
*       REPID          =
*       DYNNR          =
*       NO_AUTODEF_PROGID_DYNNR     =
*  EXCEPTIONS
*       CNTL_ERROR     = 1
*       CNTL_SYSTEM_ERROR           = 2
*       CREATE_ERROR   = 3
*       LIFETIME_ERROR = 4
*       LIFETIME_DYNPRO_DYNPRO_LINK = 5
*       OTHERS         = 6
      .
    IF SY-SUBRC <> 0.
* MESSSHE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.
  IF GRID IS INITIAL.
    CREATE OBJECT GRID
      EXPORTING
*       I_SHELLSTYLE      = 0
*       I_LIFETIME        =
        I_PARENT = CONTAINER
*       I_APPL_EVENTS     = space
*       I_PARENTDBG       =
*       I_APPLOGPARENT    =
*       I_GRAPHICSPARENT  =
*       I_NAME   =
*       I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*       ERROR_CNTL_CREATE = 1
*       ERROR_CNTL_INIT   = 2
*       ERROR_CNTL_LINK   = 3
*       ERROR_DP_CREATE   = 4
*       OTHERS   = 5
      .
    IF SY-SUBRC <> 0.
* MESSSHE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.
  CALL METHOD GRID->SET_TABLE_FOR_FIRST_DISPLAY
*  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              = ' '
*    IS_VARIANT                    =
*    I_SAVE                        =
*    I_DEFAULT                     = 'X'
*    IS_LAYOUT                     =
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
    CHANGING
      IT_OUTTAB       = IT_CAT
      IT_FIELDCATALOG = IT_FCAT
     IT_SORT         = IT_SORT
*     IT_FILTER       =
*  EXCEPTIONS
*     INVALID_PARAMETER_COMBINATION = 1
*     PROGRAM_ERROR   = 2
*     TOO_MANY_LINES  = 3
*     OTHERS          = 4
    .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

  IF SY-UCOMM = 'NEW'.
    LOOP AT SCREEN.
      IF SCREEN-NAME = 'ZSH_OS_CAT-STOCK '.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
       ENDIF.
         IF SCREEN-NAME = 'ZSH_OS_CAT-NAME'.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
       ENDIF.
         IF SCREEN-NAME = 'ZSH_OS_CAT-CATEGORY'.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
       ENDIF.
         IF SCREEN-NAME = 'ZSH_OS_CAT-TYPE'.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
       ENDIF.
         IF SCREEN-NAME = 'ZSH_OS_CAT-PRICE'.
        SCREEN-INPUT = 1.
        MODIFY SCREEN.
       ENDIF.
    ENDLOOP.
    ENDIF.
ENDMODULE.
