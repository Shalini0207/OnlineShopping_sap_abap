*&---------------------------------------------------------------------*
*& Module Pool       ZSH_OS_ADMIN1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
PROGRAM ZSH_OS_ADMIN1.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1000 INPUT.
  DATA: T_EMAIL(30),
        T_PASSWORD(8).
  CASE SY-UCOMM.
    WHEN 'LG'.

      IF T_EMAIL = 'shalini.os@gmail.com' AND T_PASSWORD  = 'shk123'.
        IF SY-SUBRC = 0.
          MESSSHE 'Logged in Sucessfully' TYPE 'I'.
          LEAVE TO SCREEN 2000.
        ELSE.
          MESSSHE 'Envalid Username/Password' TYPE 'I' DISPLAY LIKE 'E'.
        ENDIF.
      ENDIF.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_2000 INPUT.
  CASE SY-UCOMM.
    WHEN 'MP'.
      SUBMIT ZSH_OS_ADMN_MP.
    WHEN 'SB'.
      SUBMIT ZSH_OS_SEARCH_BILL.
    WHEN 'TS'.
      CALL TRANSACTION 'ZSHTS1'.
    WHEN 'EXIT'.
      LEAVE PROGRAM.

  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_2000 OUTPUT.
  SET PF-STATUS 'ZSHMENU'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_IMSHE  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_IMSHE OUTPUT.
  DATA: W_LINES TYPE I.
  TYPES PICT_LINE(256) TYPE C.
  DATA :
    CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
    EDITOR    TYPE REF TO CL_GUI_TEXTEDIT,
    PICTURE   TYPE REF TO CL_GUI_PICTURE,
    PICT_TAB  TYPE TABLE OF PICT_LINE,
    URL(255)  TYPE C.
  DATA: GRAPHIC_URL(255).
  DATA: BEGIN OF GRAPHIC_TABLE OCCURS 0,
          LINE(255) TYPE X,
        END OF GRAPHIC_TABLE.
  DATA: L_GRAPHIC_CONV TYPE I.
  DATA: L_GRAPHIC_OFFS TYPE I.
  DATA: GRAPHIC_SIZE TYPE I.
  DATA: L_GRAPHIC_XSTR TYPE XSTRING.
  .
  CALL METHOD CL_GUI_CFW=>FLUSH.
  CREATE OBJECT:
  CONTAINER EXPORTING CONTAINER_NAME = 'CONTLOGO',
  PICTURE EXPORTING PARENT = CONTAINER.
  CALL METHOD CL_SSF_XSF_UTILITIES=>GET_BDS_GRAPHIC_AS_BMP
    EXPORTING
      P_OBJECT = 'GRAPHICS'
      P_NAME   = 'LOGO'
      P_ID     = 'BMAP'
      P_BTYPE  = 'BCOL'
    RECEIVING
      P_BMP    = L_GRAPHIC_XSTR
*  EXCEPTIONS
*     NOT_FOUND      = 1
*     INTERNAL_ERROR = 2
*     others   = 3
    .
  IF SY-SUBRC <> 0.
* MESSSHE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  GRAPHIC_SIZE = XSTRLEN( L_GRAPHIC_XSTR ).
  L_GRAPHIC_CONV = GRAPHIC_SIZE.
  L_GRAPHIC_OFFS = 0.
  WHILE L_GRAPHIC_CONV > 255.
    GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(255).
    APPEND GRAPHIC_TABLE.
    L_GRAPHIC_OFFS = L_GRAPHIC_OFFS + 255.
    L_GRAPHIC_CONV = L_GRAPHIC_CONV - 255.
  ENDWHILE.
  GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(L_GRAPHIC_CONV).
  APPEND GRAPHIC_TABLE.
  CALL FUNCTION 'DP_CREATE_URL'
    EXPORTING
      TYPE     = 'IMSHE'
      SUBTYPE  = 'X-UNKNOWN'
      SIZE     = GRAPHIC_SIZE
      LIFETIME = 'T'
    TABLES
      DATA     = GRAPHIC_TABLE
    CHANGING
      URL      = URL.
  CALL METHOD PICTURE->LOAD_PICTURE_FROM_URL
    EXPORTING
      URL = URL.
  CALL METHOD PICTURE->SET_DISPLAY_MODE
    EXPORTING
      DISPLAY_MODE = PICTURE->DISPLAY_MODE_FIT_CENTER.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_1000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_1000 OUTPUT.
  SET PF-STATUS 'ZSHMENU'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_MP  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_MP OUTPUT.
  DATA: O_CL1  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      O_DOC1 TYPE REF TO CL_DD_DOCUMENT..
  IF O_CL1 IS INITIAL.
    CREATE OBJECT O_CL1 EXPORTING CONTAINER_NAME = 'CONT1'.
  ENDIF.
  IF O_DOC1 IS INITIAL.
    CREATE OBJECT O_DOC1.
  ENDIF.
  CALL METHOD O_DOC1->ADD_PICTURE
    EXPORTING
      PICTURE_ID = 'MP'
*     WIDTH      =
*     ALTERNATIVE_TEXT =
*     TABINDEX   =
    .
CALL METHOD O_DOC1->DISPLAY_DOCUMENT
  EXPORTING
*    REUSE_CONTROL      =
*    REUSE_REGISTRATION =
*    CONTAINER          =
    PARENT             = O_CL1
*  EXCEPTIONS
*    HTML_DISPLAY_ERROR = 1
*    OTHERS             = 2
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_SB  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_SB OUTPUT.
  DATA: O_CL2  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      O_DOC2 TYPE REF TO CL_DD_DOCUMENT..
  IF O_CL2 IS INITIAL.
    CREATE OBJECT O_CL2 EXPORTING CONTAINER_NAME = 'CONT2'.
  ENDIF.
  IF O_DOC2 IS INITIAL.
    CREATE OBJECT O_DOC2.
  ENDIF.
  CALL METHOD O_DOC2->ADD_PICTURE
    EXPORTING
      PICTURE_ID = 'SB'
*     WIDTH      =
*     ALTERNATIVE_TEXT =
*     TABINDEX   =
    .
CALL METHOD O_DOC2->DISPLAY_DOCUMENT
  EXPORTING
*    REUSE_CONTROL      =
*    REUSE_REGISTRATION =
*    CONTAINER          =
    PARENT             = O_CL2
*  EXCEPTIONS
*    HTML_DISPLAY_ERROR = 1
*    OTHERS             = 2
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_TS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_TS OUTPUT.
  DATA: O_CL23  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      O_DOC23 TYPE REF TO CL_DD_DOCUMENT..
  IF O_CL23 IS INITIAL.
    CREATE OBJECT O_CL23 EXPORTING CONTAINER_NAME = 'CONT3'.
  ENDIF.
  IF O_DOC23 IS INITIAL.
    CREATE OBJECT O_DOC23.
  ENDIF.
  CALL METHOD O_DOC23->ADD_PICTURE
    EXPORTING
      PICTURE_ID = 'TS'
*     WIDTH      =
*     ALTERNATIVE_TEXT =
*     TABINDEX   =
    .
CALL METHOD O_DOC23->DISPLAY_DOCUMENT
  EXPORTING
*    REUSE_CONTROL      =
*    REUSE_REGISTRATION =
*    CONTAINER          =
    PARENT             = O_CL23
*  EXCEPTIONS
*    HTML_DISPLAY_ERROR = 1
*    OTHERS             = 2
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.
ENDMODULE.
