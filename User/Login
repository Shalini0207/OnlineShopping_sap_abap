PROGRAM ZSH_OS_LOGIN.
TABLES: ZSH_OS_REGISTER,
        ZSH_OS_LOGIN.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_2000 INPUT.
  CASE SY-UCOMM.
    WHEN 'RG'.
      TYPES: BEGIN OF TY_LOGIN,
               EMAILID  TYPE ZSH_OS_EMAIL,
               PASSWORD TYPE ZSH_OS_PSWD,
             END OF TY_LOGIN.
      DATA WA_LOGIN TYPE TY_LOGIN.
      DATA: PASSWORD1 TYPE ZSH_OS_LOGIN-PASSWORD.

      IF ZSH_OS_LOGIN-PASSWORD EQ PASSWORD1.
        IF ZSH_OS_REGISTER-EMAIL CA '*@*.com' OR ZSH_OS_REGISTER-EMAIL CA '*@*.COM' .
          WA_LOGIN-EMAILID = ZSH_OS_REGISTER-EMAIL.
          WA_LOGIN-PASSWORD = ZSH_OS_LOGIN-PASSWORD.

          INSERT ZSH_OS_LOGIN FROM WA_LOGIN.
          INSERT ZSH_OS_REGISTER.
          CLEAR WA_LOGIN.
          MESSSHE 'REGISTERED SUCCESSFULLY' TYPE 'S'.
          LEAVE TO SCREEN 1000.
        ELSE.
          MESSSHE 'Invaid Email' TYPE 'I' DISPLAY LIKE 'E'.
        ENDIF.
      ELSE.
        MESSSHE 'Invaid Email or Password' TYPE 'I' DISPLAY LIKE 'E'.
      ENDIF.
      CLEAR ZSH_OS_REGISTER.
      CLEAR ZSH_OS_LOGIN.
      CLEAR PASSWORD1.
    WHEN 'EX'.
      LEAVE TO SCREEN 0.
    WHEN 'BK'.
      LEAVE TO SCREEN 1000.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1000 INPUT.
  DATA: LAA.
  CASE SY-UCOMM.
    WHEN 'SU'.
      LEAVE TO SCREEN 2000.
    WHEN 'LG'.
      SELECT SINGLE * FROM ZSH_OS_LOGIN WHERE EMAIL = ZSH_OS_LOGIN-EMAIL AND PASSWORD = ZSH_OS_LOGIN-PASSWORD.
      IF SY-SUBRC = 0.
        MESSSHE 'SUCCESSFULLY LOGGED IN' TYPE 'S'.
        SET PARAMETER ID 'CAR' FIELD ZSH_OS_LOGIN-EMAIL.
        CALL TRANSACTION 'ZSHCAT'.
      ELSE.
        MESSSHE 'Invaid Email or Password' TYPE 'I' DISPLAY LIKE 'E'.
        CLEAR ZSH_OS_LOGIN.
      ENDIF.
    WHEN 'FYP'.
      CALL SCREEN 3000 STARTING AT 4 10
                       ENDING AT 125 25.
    WHEN 'EX'.
      LEAVE PROGRAM.
    WHEN 'ADMN'.
      IF LAA = 'X'.
        CALL TRANSACTION 'ZSHAN'.
      ENDIF.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_3000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_3000 INPUT.
  DATA: PSWRD TYPE ZSH_OS_LOGIN-PASSWORD.

  CASE SY-UCOMM.
    WHEN 'RP'.
      PSWRD = ZSH_OS_LOGIN-PASSWORD.
      SELECT SINGLE  * FROM ZSH_OS_LOGIN WHERE EMAIL = ZSH_OS_LOGIN-EMAIL.
      IF SY-SUBRC = 0.

        UPDATE ZSH_OS_LOGIN SET PASSWORD = PSWRD WHERE EMAIL = ZSH_OS_LOGIN-EMAIL.
        IF SY-SUBRC = 0.
          MESSSHE 'PASSWORD UPDATED' TYPE 'S'.
        ENDIF.
        LEAVE TO SCREEN 0.
      ELSE.
        MESSSHE 'Invalid Email' TYPE 'I' DISPLAY LIKE 'E'.
        CLEAR ZSH_OS_LOGIN.
      ENDIF.
    WHEN 'EX'.
      EXIT.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_IMSHE_1000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_IMSHE_1000 OUTPUT.
  DATA: O_CL1  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
        O_DOC1 TYPE REF TO CL_DD_DOCUMENT.
  IF O_CL1 IS INITIAL.
    CREATE OBJECT O_CL1 EXPORTING CONTAINER_NAME = 'CONTLOGIN'.
  ENDIF.
  IF O_DOC1 IS INITIAL.
    CREATE OBJECT O_DOC1.
  ENDIF.
  CALL METHOD O_DOC1->ADD_PICTURE
    EXPORTING
      PICTURE_ID = 'SHLOGIN'
*     WIDTH      =
*     ALTERNATIVE_TEXT =
*     TABINDEX   =
    .
  CALL METHOD O_DOC1->DISPLAY_DOCUMENT
    EXPORTING
*     REUSE_CONTROL      =
*     REUSE_REGISTRATION =
*     CONTAINER          =
      PARENT = O_CL1
*  EXCEPTIONS
*     HTML_DISPLAY_ERROR = 1
*     OTHERS = 2
    .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.




ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_2000 OUTPUT.
  SET PF-STATUS 'ZSHMENU'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SHOW_IMSHE  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SHOW_IMSHE OUTPUT.
 DATA: W_LINES TYPE I.
  TYPES PICT_LINE(256) TYPE C.
  DATA :
  CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
  EDITOR TYPE REF TO CL_GUI_TEXTEDIT,
  PICTURE TYPE REF TO CL_GUI_PICTURE,
  PICT_TAB TYPE TABLE OF PICT_LINE,
  URL(255) TYPE C.
  DATA: GRAPHIC_URL(255).
  DATA: BEGIN OF GRAPHIC_TABLE OCCURS 0,
          LINE(255) TYPE X,
        END OF GRAPHIC_TABLE.
  DATA: L_GRAPHIC_CONV TYPE I.
  DATA: L_GRAPHIC_OFFS TYPE I.
  DATA: GRAPHIC_SIZE TYPE I.
  DATA: L_GRAPHIC_XSTR TYPE XSTRING.
  .
  CALL METHOD CL_GUI_CFW=>FLUSH.
  CREATE OBJECT:
  CONTAINER EXPORTING CONTAINER_NAME = 'CONTLOGO',
  PICTURE EXPORTING PARENT = CONTAINER.
  CALL METHOD CL_SSF_XSF_UTILITIES=>GET_BDS_GRAPHIC_AS_BMP
    EXPORTING
      P_OBJECT       = 'GRAPHICS'
      P_NAME         = 'LOGO'
      P_ID           = 'BMAP'
      P_BTYPE        = 'BCOL'
    RECEIVING
      P_BMP          = L_GRAPHIC_XSTR
*  EXCEPTIONS
*    NOT_FOUND      = 1
*    INTERNAL_ERROR = 2
*    others         = 3
          .
  IF SY-SUBRC <> 0.
* MESSSHE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  GRAPHIC_SIZE = XSTRLEN( L_GRAPHIC_XSTR ).
  L_GRAPHIC_CONV = GRAPHIC_SIZE.
  L_GRAPHIC_OFFS = 0.
  WHILE L_GRAPHIC_CONV > 255.
    GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(255).
    APPEND GRAPHIC_TABLE.
    L_GRAPHIC_OFFS = L_GRAPHIC_OFFS + 255.
    L_GRAPHIC_CONV = L_GRAPHIC_CONV - 255.
  ENDWHILE.
  GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(L_GRAPHIC_CONV).
  APPEND GRAPHIC_TABLE.
  CALL FUNCTION 'DP_CREATE_URL'
    EXPORTING
      TYPE     = 'IMSHE'
      SUBTYPE  = 'X-UNKNOWN'
      SIZE     = GRAPHIC_SIZE
      LIFETIME = 'T'
    TABLES
      DATA     = GRAPHIC_TABLE
    CHANGING
      URL      = URL.
  CALL METHOD PICTURE->LOAD_PICTURE_FROM_URL
    EXPORTING
      URL = URL.
  CALL METHOD PICTURE->SET_DISPLAY_MODE
    EXPORTING
      DISPLAY_MODE = PICTURE->DISPLAY_MODE_FIT_CENTER.
ENDMODULE.
